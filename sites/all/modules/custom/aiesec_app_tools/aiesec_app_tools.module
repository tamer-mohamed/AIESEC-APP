<?php

/**
 * @file
 * Code for the AIESEC APP Tools feature.
 */
include_once 'aiesec_app_tools_menu.inc';
include_once 'aiesec_app_tools_fields.inc';
include_once 'aiesec_app_tools_taxonomy.inc';
include_once 'aiesec_app_tools_views.inc';

function aiesec_app_tools_ctools_plugin_api() {
    list($module, $api) = func_get_args();
    if ($module == "context" && $api == "context") {
        return array("version" => "3");
    }
}

/**
 * Implements hook_views_api().
 */
function aiesec_app_tools_views_api() {
    return array("api" => "3.0");
}

function _homepage_context() {

    $context = array();
    $context = new stdClass();
    $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
    $context->api_version = 3;
    $context->name = 'aiesec_homepage';
    $context->description = 'AIESEC: Homepage';
    $context->tag = 'AIESEC APP';
    $context->conditions = array(
        'path' => array(
            'values' => array(
                '<front>' => '<front>',
            ),
        ),
    );
    $context->reactions = array(
        'block' => array(
            'blocks' => array(
                'views-revolution_slider-block' => array(
                    'module' => 'views',
                    'delta' => 'revolution_slider-block',
                    'region' => 'header',
                    'weight' => '-10',
                ),
                'partners' => array(
                    'module' => 'partners',
                    'delta' => 'partners_block',
                    'region' => 'postscript_fourth',
                    'weight' => '-10',
                ),
                'partners' => array(
                    'module' => 'partners',
                    'delta' => 'partners_block',
                    'region' => 'postscript_fourth',
                    'weight' => '-10',
                ),
            ),
        ),
    );
    $context->condition_mode = 0;

    // Translatables
    // Included for use with string extractors like potx.
    t('AIESEC: Homepage contexts');
    t('aiesec');

    context_save($context);
}

function _aiesec_app_tools_global_contexts() {

    $context = new stdClass();
    $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
    $context->api_version = 3;
    $context->name = 'global';
    $context->description = 'AIESEC: Global contexts';
    $context->tag = 'aiesec';
    $context->conditions = array(
        'path' => array(
            'values' => array(
                'contact' => 'contact',
            ),
        ),
        'sitewide' => array(
            'values' => array(
                1 => 1,
            ),
        ),
    );
    $context->reactions = array(
        'block' => array(
            'blocks' => array(
                'system-main-menu' => array(
                    'module' => 'system',
                    'delta' => 'main-menu',
                    'region' => 'navigation',
                    'weight' => '-10',
                ),
                'user-login' => array(
                    'module' => 'user',
                    'delta' => 'login',
                    'region' => 'user_login',
                    'weight' => '-10',
                ),
                'system-user-menu' => array(
                    'module' => 'system',
                    'delta' => 'user-menu',
                    'region' => 'user_menu',
                    'weight' => '-10',
                ),
                'block-2' => array(
                    'module' => 'block',
                    'delta' => '2',
                    'region' => 'footer_first',
                    'weight' => '-10',
                ),
                'block-3' => array(
                    'module' => 'block',
                    'delta' => '3',
                    'region' => 'footer_second',
                    'weight' => '-10',
                ),
                'views-dawn_taxonomy-tag_cloud' => array(
                    'module' => 'views',
                    'delta' => 'dawn_taxonomy-tag_cloud',
                    'region' => 'footer_third',
                    'weight' => '-10',
                ),
                'block-1' => array(
                    'module' => 'block',
                    'delta' => '1',
                    'region' => 'footer_fourth',
                    'weight' => '-10',
                ),
            ),
        ),
    );
    $context->condition_mode = 0;

    // Translatables
    // Included for use with string extractors like potx.
    t('AIESEC: Global contexts');
    t('aiesec');

    context_save($context);
}

function aiesec_app_tools_disable() {
    context_delete(context_load('aiesec_homepage'));
    context_delete(context_load('global'));

    _magazine_delete_instances();
    _events_delete_instances();
    _programs_delete_instances();
    _aiesec_app_tools_delete_user_types_terms();
}

function aiesec_app_tools_enable() {
    _create_magazine_fields();
    _create_events_fields();
    _create_programs_fields();
    // create fields instances
    _magazine_create_instances();
    _events_create_instances();
    _programs_create_instances();
    _homepage_context();
    _aiesec_app_tools_global_contexts();




    taxonomy_term_save((object) array(
                'name' => 'Student',
                'vid' => taxonomy_vocabulary_machine_name_load('user_types')->vid,
    ));
    taxonomy_term_save((object) array(
                'name' => 'Company',
                'vid' => taxonomy_vocabulary_machine_name_load('user_types')->vid,
    ));
    taxonomy_term_save((object) array(
                'name' => 'Alumni',
                'vid' => taxonomy_vocabulary_machine_name_load('user_types')->vid,
    ));
}

function aiesec_app_tools_install() {
    // create fields if its not exist
    _create_magazine_fields();
    _create_events_fields();
    _create_programs_fields();
}

function aiesec_app_tools_uninstall() {
    _delete_magazine_fields();
    _delete_events_fields();
    _delete_programs_fields();
    db_delete('node_revision')
            ->condition('type', 'events,magazine,programs', 'IN')
            ->execute();

    db_delete('node')
            ->condition('type', 'events,magazine,programs', 'IN')
            ->execute();

    node_type_delete('events');
    node_type_delete('programs');
    node_type_delete('magazine');
}

function aiesec_app_tools_menu_default_menu_custom() {
    $menus = array();

    // Exported menu: main-menu.
    $menus['main-menu'] = array(
        'menu_name' => 'main-menu',
        'title' => 'Main menu',
        'description' => 'The <em>Main</em> menu is used on many sites to show the major sections of the site, often in a top navigation bar.',
    );
    // Translatables
    // Included for use with string extractors like potx.
    t('Main menu');
    t('The <em>Main</em> menu is used on many sites to show the major sections of the site, often in a top navigation bar.');


    return $menus;
}

function aiesec_app_tools_node_info() {
    $items = array(
        'magazine' => array(
            'name' => t('The Magazine'),
            'base' => 'node_content',
            'description' => t('Create a new Magazine post.'),
            'has_title' => '1',
            'title_label' => t('Title'),
            'help' => '',
        ),
        'slide_builder' => array(
            'name' => t('Slide Builder'),
            'base' => 'node_content',
            'description' => t('Use <em>articles</em> for time-sensitive content like news, press releases or blog posts.'),
            'has_title' => '1',
            'title_label' => t('Title'),
            'help' => '',
        ), 'events' => array(
            'name' => t('AIESEC Events'),
            'base' => 'node_content',
            'description' => t('Add Events to certain user type with a certain category.'),
            'has_title' => '1',
            'title_label' => t('Title'),
            'help' => '',
        ), 'programs' => array(
            'name' => t('AIESEC Programs'),
            'base' => 'node_content',
            'description' => t(''),
            'has_title' => '1',
            'title_label' => t('Title'),
            'help' => '',
        )
    );

    return $items;
}

function aiesec_app_tools_image_default_styles() {
    $styles = array();

    // Exported image style: blog_post.
    $styles['blog_post'] = array(
        'name' => 'blog_post',
        'effects' => array(
            3 => array(
                'label' => 'Resize',
                'help' => 'Resizing will make images an exact set of dimensions. This may cause images to be stretched or shrunk disproportionately.',
                'effect callback' => 'image_resize_effect',
                'dimensions callback' => 'image_resize_dimensions',
                'form callback' => 'image_resize_form',
                'summary theme' => 'image_resize_summary',
                'module' => 'image',
                'name' => 'image_resize',
                'data' => array(
                    'width' => '694',
                    'height' => '320',
                ),
                'weight' => '1',
            ),
        ),
    );

    // Exported image style: homepage_blog.
    $styles['homepage_blog'] = array(
        'name' => 'homepage_blog',
        'effects' => array(
            1 => array(
                'label' => 'Resize',
                'help' => 'Resizing will make images an exact set of dimensions. This may cause images to be stretched or shrunk disproportionately.',
                'effect callback' => 'image_resize_effect',
                'dimensions callback' => 'image_resize_dimensions',
                'form callback' => 'image_resize_form',
                'summary theme' => 'image_resize_summary',
                'module' => 'image',
                'name' => 'image_resize',
                'data' => array(
                    'width' => '440',
                    'height' => '242',
                ),
                'weight' => '1',
            ),
        ),
    );

    // Exported image style: popular_post.
    $styles['popular_post'] = array(
        'name' => 'popular_post',
        'effects' => array(
            5 => array(
                'label' => 'Scale and crop',
                'help' => 'Scale and crop will maintain the aspect-ratio of the original image, then crop the larger dimension. This is most useful for creating perfectly square thumbnails without stretching the image.',
                'effect callback' => 'image_scale_and_crop_effect',
                'dimensions callback' => 'image_resize_dimensions',
                'form callback' => 'image_resize_form',
                'summary theme' => 'image_resize_summary',
                'module' => 'image',
                'name' => 'image_scale_and_crop',
                'data' => array(
                    'width' => '56',
                    'height' => '56',
                ),
                'weight' => '1',
            ),
        ),
    );


    return $styles;
}

